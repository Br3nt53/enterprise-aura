[project]
name = "aura-v2"
version = "2.0.0"
description = "AURA Enterprise v2 â€“ real-time multi-object tracking"
readme = "README.md"
requires-python = ">=3.11"

dependencies = [
  "typer>=0.9",
  "fastapi>=0.116",
  "uvicorn>=0.23",
  "pydantic>=2.5",
  "pyyaml>=6.0",
  "numpy>=1.26",
  "filterpy>=1.4.5",
  "scipy>=1.11",
  "scikit-learn>=1.3",
  "grpcio>=1.59",
  "websockets>=12.0",
  "opentelemetry-api>=1.20",
  "opentelemetry-sdk>=1.20",
  "prometheus-client>=0.22",
  "structlog>=25",
  "aioredis>=2.0",
  "aiokafka>=0.12",
  "motor>=3.7",
]

[project.optional-dependencies]
tracking = [
  "boxmot>=15",
  "ultralytics>=8.3",
  "supervision>=0.26",
  "deep-sort-realtime>=1.3",
  "lap>=0.5.1",
]
observability = [
  "opentelemetry-api>=1.20",
  "opentelemetry-sdk>=1.20",
  "prometheus-client>=0.22",
  "structlog>=25",
]
messaging = ["aiokafka>=0.12","aioredis>=2.0","motor>=3.7"]
perf = ["numba>=0.61","numpy<2.3"]   # macOS/numba pin
test = ["pytest>=8.2","requests>=2.32","httpx>=0.28"]

# Linux/Windows-only GPU extras; excluded on macOS to avoid TensorRT errors
gpu = [
  "cupy-cuda12x>=13 ; platform_system=='Linux'",
  "torch>=2.2",
  'tensorrt>=8.6; platform_system!="Darwin"',
  'tensorrt-cu13==10.13.3.9; platform_system!="Darwin"',
]

[project.scripts]
aura-cli = "aura_v2.main:app_cli"

[build-system]
requires = ["setuptools>=68", "wheel"]
build-backend = "setuptools.build_meta"

[tool.setuptools.packages.find]
where = ["."]
include = ["aura_v2*"]

[tool.pytest.ini_options]
testpaths = ["aura_v2/tests"]
addopts = "-q"
