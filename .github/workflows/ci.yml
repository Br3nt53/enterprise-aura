name: CI
on:
  push: { branches: [ main ] }
  pull_request: { branches: [ main ] }

jobs:
  test:
    runs-on: ubuntu-latest
    services:
      mongo:
        image: mongo:6.0
        ports: [ "27017:27017" ]
        options: >-
          --health-cmd="mongosh --eval 'db.runCommand({ ping: 1 })'"
          --health-interval=5s --health-timeout=5s --health-retries=12
    env:
      PYTHON_VERSION: "3.11"
      AURA_ASSOCIATION_METHOD: greedy
      MONGO_URI: mongodb://localhost:27017
      MONGO_DB: aura_db
      MONGO_COLLECTION: tracks
      AURA_METRICS_STRICT: "1"
      AURA_P99_LATENCY_MS_BUDGET: "750"
      AURA_MAX_ID_SWITCH_RATE: "0.02"
    steps:
      - uses: actions/checkout@v4

      - name: Install uv
        uses: astral-sh/setup-uv@v4

      - name: Set up Python & venv
        run: |
          uv python install "$PYTHON_VERSION"
          uv venv --python "$PYTHON_VERSION"
          echo "VIRTUAL_ENV=$PWD/.venv" >> "$GITHUB_ENV"
          echo "$PWD/.venv/bin"       >> "$GITHUB_PATH"

      - name: Cache uv
        uses: actions/cache@v4
        with:
          path: ~/.cache/uv
          key: uv-${{ runner.os }}-${{ env.PYTHON_VERSION }}-${{ hashFiles('pyproject.toml') }}

      - name: Install deps
        run: |
          uv pip install -e ".[tracking,observability,messaging,test]" --upgrade
          uv pip install motor pymongo pytest pytest-asyncio ruff psutil

      - name: Lint
        run: uv run ruff check .

      - name: Wait for Mongo healthy (pymongo)
        run: |
          uv run python - <<'PY2'
          import os, time
          from pymongo import MongoClient
          uri = os.environ.get("MONGO_URI","mongodb://localhost:27017")
          deadline = time.time() + 90
          while time.time() < deadline:
              try:
                  MongoClient(uri, serverSelectionTimeoutMS=1000).admin.command("ping")
                  print("Mongo is ready"); break
              except Exception as e:
                  print("waiting for mongo:", e); time.sleep(2)
          else:
              raise SystemExit("Mongo never became healthy")
          PY2

      - name: Tests
        run: uv run pytest -q
