diff --git a/.pre-commit-config.yaml b/.pre-commit-config.yaml
new file mode 100644
index 0000000..bfbf9a1
--- /dev/null
+++ b/.pre-commit-config.yaml
@@ -0,0 +1,31 @@
+repos:
+  - repo: https://github.com/psf/black
+    rev: 24.8.0
+    hooks:
+      - id: black
+        args: ["--line-length=100"]
+  - repo: https://github.com/pycqa/isort
+    rev: 5.13.2
+    hooks:
+      - id: isort
+        args: ["--profile=black", "--line-length=100"]
+  - repo: https://github.com/astral-sh/ruff-pre-commit
+    rev: v0.6.4
+    hooks:
+      - id: ruff
+        args: ["--line-length=100"]
+      - id: ruff-format
+        args: []
diff --git a/ruff.toml.bak b/ruff.toml.bak
deleted file mode 100644
index e69de29..0000000
--- a/ruff.toml.bak
+++ /dev/null
@@ -1 +0,0 @@
-
diff --git a/ruff.toml b/ruff.toml
new file mode 100644
index 0000000..a1b2c3d
--- /dev/null
+++ b/ruff.toml
@@ -0,0 +1,13 @@
+line-length = 100
+extend-select = ["W", "E", "F"]
+ignore = ["E203","E501"]
+target-version = "py311"
+[format]
+quote-style = "double"
+indent-style = "space"
+skip-magic-trailing-comma = false
diff --git a/.ruffignore b/.ruffignore
new file mode 100644
index 0000000..b0c0d0e
--- /dev/null
+++ b/.ruffignore
@@ -0,0 +1,22 @@
+__pycache__/
+.venv/
+.pytest_cache/
+.mypy_cache/
+.ruff_cache/
+build/
+dist/
+*.egg-info/
+.eggs/
+artifacts/
+tmp/
+.DS_Store
+.idea/
+.vscode/
+node_modules/
+.coverage
+coverage.xml
+*.pyc
+*.pyo
+*.pyd
+.bak_aura/
+*.bak
diff --git a/pyproject.toml b/pyproject.toml
index 6c0d1f2..7e8f9a0 100644
--- a/pyproject.toml
+++ b/pyproject.toml
@@ -1,3 +1,9 @@
 [build-system]
 requires = ["setuptools>=61.0"]
 build-backend = "setuptools.build_meta"
+
+[tool.black]
+line-length = 100
+target-version = ["py311"]
+
+[tool.isort]
+profile = "black"
diff --git a/tests/m0/test_guardrails.py b/tests/m0/test_guardrails.py
new file mode 100644
index 0000000..1b2c3d4
--- /dev/null
+++ b/tests/m0/test_guardrails.py
@@ -0,0 +1,84 @@
+from __future__ import annotations
+import importlib, importlib.util, pathlib, tomllib
+
+def test_pkg_import() -> None:
+    import aura_v2  # noqa: F401
+
+def test_optional_numba_fallback_imports() -> None:
+    spec = importlib.util.find_spec("aura_v2.domain.association.costs.aabb_iou_numba")
+    assert spec is not None
+    mod = importlib.import_module("aura_v2.domain.association.costs.aabb_iou_numba")
+    assert hasattr(mod, "aabb_iou")
+
+def test_configs_present() -> None:
+    root = pathlib.Path(__file__).resolve().parents[2]
+    assert (root / "ruff.toml").exists()
+    data = tomllib.loads((root / "pyproject.toml").read_text())
+    blk = data.get("tool", {}).get("black", {})
+    if "line-length" in blk:
+        assert int(blk["line-length"]) in (88, 100)
